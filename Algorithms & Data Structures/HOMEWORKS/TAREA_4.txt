/**-------------------------------------------------------------------------------------------------------------------- //
 * Algoritmo: Quicksort <Recursivo>
 * -------------------------------------------------------------------------------------------------------------------- //
 *
 * @author Serrato Guerrero Michael Brandon - Expediente: 258849
 * @author Balderas Beltrán Alan - Expediente: 237020
 * @author Vargas Aguillón Jesús - Expediente: 258872
 * -------------------------------------------------------------------------------------------------------------------- //
 */

--------------------------------------------------------------------------------------------------------------------
    EXPLICACIÓN DEL ALGORITMO:
--------------------------------------------------------------------------------------------------------------------

El Algoritmo Quicksort (recursivo) es un método de ordenamiento de complejidad O(N log N) basado en 
la técnica "Divide y Vencerás" (que consiste en resolver un problema difícil dividiéndolo en partes más 
pequeñas tantas veces como sea necesario hasta llegar al punto de que la resolución de las partes se vuelva 
obvia y fácil de realizar). La descripción del algoritmo como tal sería la siguiente:

Inicialmente se toma un elemento cualquiera del arreglo (cuyo valor servirá como punto de 
comparación o de referencia sobre los demás elementos). Comúnmente se toman los valores de los 
extremos o incluso el valor de en medio (en algunas ocasiones el algoritmo es implementado mediante una 
heurística como el hecho de elegir el valor de forma aleatoria o mediante un proceso de cálculo para 
mejorar aún más la complejidad del algoritmo). Posteriormente se utilizan dos pivotes, uno izquierdo y 
el otro derecho qué mediante una serie de iteraciones en dirección contraria sobre el arreglo, 
permita acomodar los valores dentro de un cierto rango (sin incluir el valor de referencia o de comparación),
de tal manera que los valores menores al valor de referencia queden de lado izquierdo, mientras que los valores 
mayores a él queden de lado derecho. Una vez terminado el proceso anterior, se coloca el valor de 
referencia en su posición y se manda a llamar nuevamente al método, una llamada con el rango de los 
valores menores (el lado izquierdo al valor de referencia) y otro con el rango de los 
valores mayores (el lado derecho al valor de referencia), esto último con el motivo de ordenar los “subarreglos” 
mediante la recursividad hasta no encontrar más rangos de subarreglos o elementos por ordenar.


--------------------------------------------------------------------------------------------------------------------
    CORRIDAS:
--------------------------------------------------------------------------------------------------------------------

Cantidad de Elementos (N): 5

Arreglo (estado inicial): 
3 2 8 -13 0

Estados:
3 2 0 -13 8
-13 2 0 3 8
-13 2 0 3 8
-13 0 2 3 8

Cantidad de elementos: 5
Cantidad de comparaciones: 13
Cantidad de intercambios: 4

--------------------------------------------------------------------------------------------------------------------

Cantidad de Elementos (N): 10

Arreglo (estado inicial): 
0 12 -3 -7 13 8 10 0 -13 15

Estados:
0 -13 -3 -7 13 8 10 0 12 15
0 -13 -3 -7 0 8 10 13 12 15
0 -13 -3 -7 0 8 10 13 12 15
-7 -13 -3 0 0 8 10 13 12 15
-13 -7 -3 0 0 8 10 13 12 15
-13 -7 -3 0 0 8 10 13 12 15
-13 -7 -3 0 0 8 10 13 12 15
-13 -7 -3 0 0 8 10 12 13 15

Cantidad de elementos: 10
Cantidad de comparaciones: 35
Cantidad de intercambios: 8

--------------------------------------------------------------------------------------------------------------------

Cantidad de Elementos (N): 12

Arreglo (estado inicial): 
5 3 1 -1 8 8 7 0 9 -9 2 1

Estados:
5 3 1 -1 1 8 7 0 9 -9 2 8
5 3 1 -1 1 2 7 0 9 -9 8 8
5 3 1 -1 1 2 -9 0 9 7 8 8
0 3 1 -1 1 2 -9 5 9 7 8 8
0 -9 1 -1 1 2 3 5 9 7 8 8
0 -9 -1 1 1 2 3 5 9 7 8 8
-1 -9 0 1 1 2 3 5 9 7 8 8
-9 -1 0 1 1 2 3 5 9 7 8 8
-9 -1 0 1 1 2 3 5 9 7 8 8
-9 -1 0 1 1 2 3 5 9 7 8 8
-9 -1 0 1 1 2 3 5 8 7 8 9
-9 -1 0 1 1 2 3 5 8 7 8 9
-9 -1 0 1 1 2 3 5 7 8 8 9

Cantidad de elementos: 12
Cantidad de comparaciones: 42
Cantidad de intercambios: 13

--------------------------------------------------------------------------------------------------------------------